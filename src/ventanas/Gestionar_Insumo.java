/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ventanas;

import clases.Conexion;
import java.awt.Image;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.WindowConstants;

/**
 *
 * @author user
 */
public class Gestionar_Insumo extends javax.swing.JFrame {

    int obtener, obtener2;
    String obtener_S;
    float VASO, AGUA, PALETINA, CAFÉ, AZUCAR, CREMA, CHOCOLATE, VAINILLA, TOTAL, Ganancia;
    int Precio;
    String guardoT, guardoG, guardoP, Seleccion;

    public Gestionar_Insumo() {
        initComponents();
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/imagenes/Logo Final.png")));
        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);

        setLocationRelativeTo(null);
        setResizable(false);
        setSize(551, 369);

        try {
            Connection cn = Conexion.conectar();
            PreparedStatement pst = cn.prepareStatement(
                    "select precio FROM ingresos WHERE ID=(SELECT max(ID) FROM ingresos)");
            ResultSet rs = pst.executeQuery();
            if (rs.next()) {

                txt_Precio.setText(rs.getString("precio"));
            }
            cn.close();
        } catch (SQLException e) {
            System.err.println("error al consultar los datos de la base ");
        }

        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txt_Ganancias = new javax.swing.JTextField();
        etiketa_insumo2 = new javax.swing.JLabel();
        etiketa_insumo1 = new javax.swing.JLabel();
        txt_Precio = new javax.swing.JTextField();
        cmb_Insumo = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        cmb_Selecion = new javax.swing.JComboBox<>();
        txt_Insumo = new javax.swing.JTextField();
        etiketa_insumo = new javax.swing.JLabel();
        etiketa_Selecion = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txt_Seleccion = new javax.swing.JTextField();
        etiketa_Fondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txt_Ganancias.setBackground(new java.awt.Color(102, 51, 27));
        txt_Ganancias.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        txt_Ganancias.setForeground(new java.awt.Color(255, 255, 255));
        txt_Ganancias.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        getContentPane().add(txt_Ganancias, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 280, 130, 50));

        etiketa_insumo2.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        etiketa_insumo2.setForeground(new java.awt.Color(0, 0, 0));
        etiketa_insumo2.setText("Ganancia:");
        getContentPane().add(etiketa_insumo2, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 290, -1, -1));

        etiketa_insumo1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        etiketa_insumo1.setForeground(new java.awt.Color(255, 255, 255));
        etiketa_insumo1.setText("Precio:");
        getContentPane().add(etiketa_insumo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 290, -1, -1));

        txt_Precio.setBackground(new java.awt.Color(102, 51, 27));
        txt_Precio.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        txt_Precio.setForeground(new java.awt.Color(255, 255, 255));
        txt_Precio.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        getContentPane().add(txt_Precio, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 280, 60, 50));

        cmb_Insumo.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        cmb_Insumo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "VASO", "AGUA", "PALETINA", "CAFE", "AZUCAR", "CREMA", "CHOCOLATE", "CAPUCHINO VAINILLA", " " }));
        getContentPane().add(cmb_Insumo, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 80, 170, 40));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Lupa1.jpg.png"))); // NOI18N
        jButton1.setContentAreaFilled(false);
        jButton1.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Lupa.jpg.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, 130, 110));

        jLabel2.setFont(new java.awt.Font("Eras Demi ITC", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Costo Unitario");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 0, -1, -1));

        cmb_Selecion.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        cmb_Selecion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "EXPRESS", "AMERICANO", "CAFE CON LECHE", "CAPUCHINO", "MOKACHINO", "CHOCOLATE", "CAPUCHINO VAINILLA", "MILK", " " }));
        getContentPane().add(cmb_Selecion, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 80, 180, 40));

        txt_Insumo.setBackground(new java.awt.Color(102, 51, 27));
        txt_Insumo.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        txt_Insumo.setForeground(new java.awt.Color(255, 255, 255));
        txt_Insumo.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        getContentPane().add(txt_Insumo, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 220, 200, 50));

        etiketa_insumo.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        etiketa_insumo.setForeground(new java.awt.Color(0, 0, 0));
        etiketa_insumo.setText("Insumo:");
        getContentPane().add(etiketa_insumo, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 230, -1, -1));

        etiketa_Selecion.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        etiketa_Selecion.setForeground(new java.awt.Color(0, 0, 0));
        etiketa_Selecion.setText("Seleccion:");
        getContentPane().add(etiketa_Selecion, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 150, -1, -1));

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Seleccion:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 60, -1, -1));

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Insumo:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 60, -1, -1));

        txt_Seleccion.setBackground(new java.awt.Color(102, 51, 27));
        txt_Seleccion.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        txt_Seleccion.setForeground(new java.awt.Color(255, 255, 255));
        txt_Seleccion.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        getContentPane().add(txt_Seleccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 140, 200, 50));

        etiketa_Fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/fondo_SI.png"))); // NOI18N
        getContentPane().add(etiketa_Fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 550, 370));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        obtener_S = (String) cmb_Selecion.getSelectedItem();
        Precio = Integer.parseInt(txt_Precio.getText().trim());
        obtener = cmb_Selecion.getSelectedIndex();
        obtener2 = cmb_Insumo.getSelectedIndex();
        if (obtener_S.equals("EXPRESS")) {

            try {

                Connection cn = Conexion.conectar();
                PreparedStatement pst = cn.prepareStatement("select agua, paletina,vaso,cafe,azucar from unitario");

                ResultSet rs = pst.executeQuery();

                if (rs.next()) {

                    AGUA = Float.parseFloat(rs.getString("agua"));
                    PALETINA = Float.parseFloat(rs.getString("paletina"));
                    VASO = Float.parseFloat(rs.getString("vaso"));
                    CAFÉ = Float.parseFloat(rs.getString("cafe"));
                    AZUCAR = Float.parseFloat(rs.getString("azucar"));

                }
            } catch (SQLException e) {
                System.err.println("Eror");
            }

            TOTAL = AGUA + PALETINA + VASO + CAFÉ + AZUCAR;
            guardoT = Float.toString(TOTAL);
            txt_Seleccion.setText(guardoT);
            Ganancia = Precio - TOTAL;
            guardoG = Float.toString(Ganancia);
            txt_Ganancias.setText(guardoG);

        } else if (obtener_S.equals("AMERICANO")) {

            try {

                Connection cn = Conexion.conectar();
                PreparedStatement pst = cn.prepareStatement("select agua, paletina,vaso,cafe,azucar from unitario");

                ResultSet rs = pst.executeQuery();

                if (rs.next()) {

                    AGUA = Float.parseFloat(rs.getString("agua"));
                    PALETINA = Float.parseFloat(rs.getString("paletina"));
                    VASO = Float.parseFloat(rs.getString("vaso"));
                    CAFÉ = Float.parseFloat(rs.getString("cafe"));
                    AZUCAR = Float.parseFloat(rs.getString("azucar"));

                }
            } catch (SQLException e) {
                System.err.println("Eror");
            }

            TOTAL = AGUA + PALETINA + VASO + CAFÉ + AZUCAR;
            guardoT = Float.toString(TOTAL);
            txt_Seleccion.setText(guardoT);
            Ganancia = Precio - TOTAL;
            guardoG = Float.toString(Ganancia);
            txt_Ganancias.setText(guardoG);

        } else if (obtener == 2) {

            try {

                Connection cn = Conexion.conectar();
                PreparedStatement pst = cn.prepareStatement("select agua, paletina,vaso,cafe,crema,azucar from unitario");

                ResultSet rs = pst.executeQuery();

                if (rs.next()) {

                    AGUA = Float.parseFloat(rs.getString("agua"));
                    PALETINA = Float.parseFloat(rs.getString("paletina"));
                    VASO = Float.parseFloat(rs.getString("vaso"));
                    CAFÉ = Float.parseFloat(rs.getString("cafe"));
                    AZUCAR = Float.parseFloat(rs.getString("azucar"));
                    CREMA = Float.parseFloat(rs.getString("crema"));

                }
            } catch (SQLException e) {
                System.err.println("Eror");
            }

            TOTAL = AGUA + PALETINA + VASO + CAFÉ + AZUCAR + CREMA;
            guardoT = Float.toString(TOTAL);
            txt_Seleccion.setText(guardoT);
            Ganancia = Precio - TOTAL;
            guardoG = Float.toString(Ganancia);
            txt_Ganancias.setText(guardoG);
        } else if (obtener == 3) {

            try {

                Connection cn = Conexion.conectar();
                PreparedStatement pst = cn.prepareStatement("select agua, paletina,vaso,cafe,crema,azucar from unitario");

                ResultSet rs = pst.executeQuery();

                if (rs.next()) {

                    AGUA = Float.parseFloat(rs.getString("agua"));
                    PALETINA = Float.parseFloat(rs.getString("paletina"));
                    VASO = Float.parseFloat(rs.getString("vaso"));
                    CAFÉ = Float.parseFloat(rs.getString("cafe"));
                    AZUCAR = Float.parseFloat(rs.getString("azucar"));
                    CREMA = Float.parseFloat(rs.getString("crema"));

                }
            } catch (SQLException e) {
                System.err.println("Eror");
            }

            TOTAL = AGUA + PALETINA + VASO + CAFÉ + AZUCAR + (CREMA * 2);
            guardoT = Float.toString(TOTAL);
            txt_Seleccion.setText(guardoT);
            Ganancia = Precio - TOTAL;
            guardoG = Float.toString(Ganancia);
            txt_Ganancias.setText(guardoG);

        } else if (obtener == 4) {

            try {

                Connection cn = Conexion.conectar();
                PreparedStatement pst = cn.prepareStatement("select agua, paletina,vaso,chocolate,cafe,crema,azucar from unitario");

                ResultSet rs = pst.executeQuery();

                if (rs.next()) {

                    CHOCOLATE = Float.parseFloat(rs.getString("chocolate"));
                    AGUA = Float.parseFloat(rs.getString("agua"));
                    PALETINA = Float.parseFloat(rs.getString("paletina"));
                    VASO = Float.parseFloat(rs.getString("vaso"));
                    CAFÉ = Float.parseFloat(rs.getString("cafe"));
                    AZUCAR = Float.parseFloat(rs.getString("azucar"));
                    CREMA = Float.parseFloat(rs.getString("crema"));

                }
            } catch (SQLException e) {
                System.err.println("Eror");
            }

            TOTAL = AGUA + PALETINA + VASO + CAFÉ + AZUCAR + (CREMA * 2) + CHOCOLATE;
            guardoT = Float.toString(TOTAL);
            txt_Seleccion.setText(guardoT);
            Ganancia = Precio - TOTAL;
            guardoG = Float.toString(Ganancia);
            txt_Ganancias.setText(guardoG);

        } else if (obtener == 5) {

            try {

                Connection cn = Conexion.conectar();
                PreparedStatement pst = cn.prepareStatement("select agua, paletina,vaso,chocolate from unitario");

                ResultSet rs = pst.executeQuery();

                if (rs.next()) {

                    CHOCOLATE = Float.parseFloat(rs.getString("chocolate"));
                    AGUA = Float.parseFloat(rs.getString("agua"));
                    PALETINA = Float.parseFloat(rs.getString("paletina"));
                    VASO = Float.parseFloat(rs.getString("vaso"));

                }
            } catch (SQLException e) {
                System.err.println("Eror");
            }

            TOTAL = AGUA + PALETINA + VASO + (CHOCOLATE*2);
            guardoT = Float.toString(TOTAL);
            txt_Seleccion.setText(guardoT);
            Ganancia = Precio - TOTAL;
            guardoG = Float.toString(Ganancia);
            txt_Ganancias.setText(guardoG);

        } else if (obtener == 6) {

            try {

                Connection cn = Conexion.conectar();
                PreparedStatement pst = cn.prepareStatement("select agua, paletina,vaso, capuchino from unitario");

                ResultSet rs = pst.executeQuery();

                if (rs.next()) {

                    VAINILLA = Float.parseFloat(rs.getString("capuchino"));
                    AGUA = Float.parseFloat(rs.getString("agua"));
                    PALETINA = Float.parseFloat(rs.getString("paletina"));
                    VASO = Float.parseFloat(rs.getString("vaso"));

                }
            } catch (SQLException e) {
                System.err.println("Eror");
            }

            TOTAL = AGUA + PALETINA + VASO + VAINILLA;
            guardoT = Float.toString(TOTAL);
            txt_Seleccion.setText(guardoT);
            Ganancia = Precio - TOTAL;
            guardoG = Float.toString(Ganancia);
            txt_Ganancias.setText(guardoG);

        } else if (obtener == 7) {

            try {

                Connection cn = Conexion.conectar();
                PreparedStatement pst = cn.prepareStatement("select agua, paletina,vaso, crema from unitario");

                ResultSet rs = pst.executeQuery();

                if (rs.next()) {

                    CREMA = Float.parseFloat(rs.getString("crema"));
                    AGUA = Float.parseFloat(rs.getString("agua"));
                    PALETINA = Float.parseFloat(rs.getString("paletina"));
                    VASO = Float.parseFloat(rs.getString("vaso"));

                }
            } catch (SQLException e) {
                System.err.println("Eror");
            }

            TOTAL = AGUA + PALETINA + VASO + (CREMA*2);
            guardoT = Float.toString(TOTAL);
            txt_Seleccion.setText(guardoT);
            Ganancia = Precio - TOTAL;
            guardoG = Float.toString(Ganancia);
            txt_Insumo.setText(guardoG);
        }
        
        if(obtener2 == 0){
            
            try {
                Connection cn2 = Conexion.conectar();
                PreparedStatement pst2 = cn2.prepareStatement("select vaso from unitario");
                ResultSet rs = pst2.executeQuery();
                if(rs.next()){
                    Seleccion = rs.getString("vaso");
                }
                txt_Insumo.setText(Seleccion);
            } catch (SQLException e) {
                
            }
            }else if(obtener2 == 1){
            
            try {
                Connection cn2 = Conexion.conectar();
                PreparedStatement pst2 = cn2.prepareStatement("select agua from unitario");
                ResultSet rs = pst2.executeQuery();
                if(rs.next()){
                    Seleccion = rs.getString("agua");
                }
                txt_Insumo.setText(Seleccion);
            } catch (SQLException e) {
            }
            
        }else if(obtener2 == 2){
            
            try {
                Connection cn2 = Conexion.conectar();
                PreparedStatement pst2 = cn2.prepareStatement("select paletina from unitario");
                ResultSet rs = pst2.executeQuery();
                if(rs.next()){
                    Seleccion = rs.getString("paletina");
                }
                txt_Insumo.setText(Seleccion);
            } catch (SQLException e) {
            }
        }else if(obtener2 == 3){
            
            try {
                Connection cn2 = Conexion.conectar();
                PreparedStatement pst2 = cn2.prepareStatement("select cafe from unitario");
                ResultSet rs = pst2.executeQuery();
                if(rs.next()){
                    Seleccion = rs.getString("cafe");
                }
                txt_Insumo.setText(Seleccion);
            } catch (SQLException e) {
            }
        }else if(obtener2 == 4){
            
            try {
                Connection cn2 = Conexion.conectar();
                PreparedStatement pst2 = cn2.prepareStatement("select azucar from unitario");
                ResultSet rs = pst2.executeQuery();
                if(rs.next()){
                    Seleccion = rs.getString("azucar");
                }
                txt_Insumo.setText(Seleccion);
            } catch (SQLException e) {
            }
        }else if(obtener2 == 5){
            
            try {
                Connection cn2 = Conexion.conectar();
                PreparedStatement pst2 = cn2.prepareStatement("select crema from unitario");
                ResultSet rs = pst2.executeQuery();
                if(rs.next()){
                    Seleccion = rs.getString("crema");
                }
                txt_Insumo.setText(Seleccion);
            } catch (SQLException e) {
            }
        }else if(obtener2 == 6){
            
            try {
                Connection cn2 = Conexion.conectar();
                PreparedStatement pst2 = cn2.prepareStatement("select chocolate from unitario");
                ResultSet rs = pst2.executeQuery();
                if(rs.next()){
                    Seleccion = rs.getString("chocolate");
                }
                txt_Insumo.setText(Seleccion);
            } catch (SQLException e) {
            }
        }else if(obtener2 == 7){
            
            try {
                Connection cn2 = Conexion.conectar();
                PreparedStatement pst2 = cn2.prepareStatement("select capuchino from unitario");
                ResultSet rs = pst2.executeQuery();
                if(rs.next()){
                    Seleccion = rs.getString("capuchino");
                }
                txt_Insumo.setText(Seleccion);
            } catch (SQLException e) {
            }
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Gestionar_Insumo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Gestionar_Insumo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Gestionar_Insumo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Gestionar_Insumo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Gestionar_Insumo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmb_Insumo;
    private javax.swing.JComboBox<String> cmb_Selecion;
    private javax.swing.JLabel etiketa_Fondo;
    private javax.swing.JLabel etiketa_Selecion;
    private javax.swing.JLabel etiketa_insumo;
    private javax.swing.JLabel etiketa_insumo1;
    private javax.swing.JLabel etiketa_insumo2;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField txt_Ganancias;
    private javax.swing.JTextField txt_Insumo;
    private javax.swing.JTextField txt_Precio;
    private javax.swing.JTextField txt_Seleccion;
    // End of variables declaration//GEN-END:variables
}
