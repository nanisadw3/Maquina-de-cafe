/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ventanas;

import clases.Conexion;
import java.awt.Image;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.WindowConstants;

/**
 *
 * @author user
 */
public class Cambiar_precio extends javax.swing.JFrame {

    public static String precioo;
    int precio;
    String guardoI;
    float cantidad, insumo, ag;
    String user;
    int bandera = 1;

    /**
     * Creates new form Cambiar_precio
     */
    public Cambiar_precio() {
        initComponents();
        user = Log_in.user;
setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/imagenes/Logo Final.png")));
        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);

        setSize(849, 547);
        setResizable(false);//metodo para rue el usuario no modifique mi interfas
        setLocationRelativeTo(null);//metodo para sentrar mi interfas
        setTitle("Cambio de precio -secion de " + user);//pongo el titulo

        

        txt_nuevo_Precio.setVisible(false);
        txt_precio_antiguo.setVisible(false);
        etiketa_Like.setVisible(false);
        etiketa_precio_nuevo.setVisible(false);
        etiketa_precio_pasado1.setVisible(false);
        boton_Actualizar.setVisible(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        boton_Cerrar = new javax.swing.JButton();
        Boton_Azucar = new javax.swing.JButton();
        boton_Crema = new javax.swing.JButton();
        boton_cafe = new javax.swing.JButton();
        txt_nuevo_Precio = new javax.swing.JTextField();
        boton_servicio = new javax.swing.JButton();
        txt_precio_antiguo = new javax.swing.JTextField();
        boton_Vasos1 = new javax.swing.JButton();
        boton_Agua = new javax.swing.JButton();
        etiketa_precio_pasado1 = new javax.swing.JLabel();
        boton_Paletinas = new javax.swing.JButton();
        boton_chocolate = new javax.swing.JButton();
        boton_Capuchino = new javax.swing.JButton();
        boton_Actualizar = new javax.swing.JButton();
        etiketa_precio_nuevo = new javax.swing.JLabel();
        etiketa_Like = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtP_Instrucciones = new javax.swing.JTextArea();
        etiketa_Fondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        boton_Cerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/cerrar.png"))); // NOI18N
        boton_Cerrar.setContentAreaFilled(false);
        boton_Cerrar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/cerrar2.png"))); // NOI18N
        boton_Cerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_CerrarActionPerformed(evt);
            }
        });
        getContentPane().add(boton_Cerrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 10, 60, 50));

        Boton_Azucar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/azucar.png"))); // NOI18N
        Boton_Azucar.setContentAreaFilled(false);
        Boton_Azucar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/azucar2.png"))); // NOI18N
        Boton_Azucar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Boton_AzucarActionPerformed(evt);
            }
        });
        getContentPane().add(Boton_Azucar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 370, 70, -1));

        boton_Crema.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/crema.png"))); // NOI18N
        boton_Crema.setContentAreaFilled(false);
        boton_Crema.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/crema2.png"))); // NOI18N
        boton_Crema.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_CremaActionPerformed(evt);
            }
        });
        getContentPane().add(boton_Crema, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 370, 60, 110));

        boton_cafe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/cafe.png"))); // NOI18N
        boton_cafe.setContentAreaFilled(false);
        boton_cafe.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        boton_cafe.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/cafe2.png"))); // NOI18N
        boton_cafe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_cafeActionPerformed(evt);
            }
        });
        getContentPane().add(boton_cafe, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 370, 90, 110));

        txt_nuevo_Precio.setFont(new java.awt.Font("Cooper Black", 0, 24)); // NOI18N
        getContentPane().add(txt_nuevo_Precio, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, 240, 50));

        boton_servicio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Servicio.png"))); // NOI18N
        boton_servicio.setContentAreaFilled(false);
        boton_servicio.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        boton_servicio.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Servicio1.png"))); // NOI18N
        boton_servicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_servicioActionPerformed(evt);
            }
        });
        getContentPane().add(boton_servicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 320, 90, 110));

        txt_precio_antiguo.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 24)); // NOI18N
        getContentPane().add(txt_precio_antiguo, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, 240, 50));

        boton_Vasos1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/vasos.png"))); // NOI18N
        boton_Vasos1.setContentAreaFilled(false);
        boton_Vasos1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        boton_Vasos1.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/basos2.png"))); // NOI18N
        boton_Vasos1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_Vasos1ActionPerformed(evt);
            }
        });
        getContentPane().add(boton_Vasos1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 260, 80, 110));

        boton_Agua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/agua.png"))); // NOI18N
        boton_Agua.setContentAreaFilled(false);
        boton_Agua.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        boton_Agua.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/agua2.png"))); // NOI18N
        boton_Agua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_AguaActionPerformed(evt);
            }
        });
        getContentPane().add(boton_Agua, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 260, 70, 110));

        etiketa_precio_pasado1.setFont(new java.awt.Font("DialogInput", 1, 24)); // NOI18N
        etiketa_precio_pasado1.setForeground(new java.awt.Color(255, 255, 255));
        etiketa_precio_pasado1.setText("Slelecciona el insumo");
        getContentPane().add(etiketa_precio_pasado1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 470, 40));

        boton_Paletinas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/paletinas.png"))); // NOI18N
        boton_Paletinas.setContentAreaFilled(false);
        boton_Paletinas.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        boton_Paletinas.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/paletinas2.png"))); // NOI18N
        boton_Paletinas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_PaletinasActionPerformed(evt);
            }
        });
        getContentPane().add(boton_Paletinas, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 260, 90, 110));

        boton_chocolate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/chocolate.png"))); // NOI18N
        boton_chocolate.setContentAreaFilled(false);
        boton_chocolate.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/chocolate2.png"))); // NOI18N
        boton_chocolate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_chocolateActionPerformed(evt);
            }
        });
        getContentPane().add(boton_chocolate, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 370, 90, 110));

        boton_Capuchino.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/caouchino.png"))); // NOI18N
        boton_Capuchino.setContentAreaFilled(false);
        boton_Capuchino.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        boton_Capuchino.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/capuchino2.png"))); // NOI18N
        boton_Capuchino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_CapuchinoActionPerformed(evt);
            }
        });
        getContentPane().add(boton_Capuchino, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 260, 70, 110));

        boton_Actualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/boton actualizar y comentar.png"))); // NOI18N
        boton_Actualizar.setContentAreaFilled(false);
        boton_Actualizar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/boton actualizar y comentar 2.psd.png"))); // NOI18N
        boton_Actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_ActualizarActionPerformed(evt);
            }
        });
        getContentPane().add(boton_Actualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 70, 310, 120));

        etiketa_precio_nuevo.setFont(new java.awt.Font("DialogInput", 1, 24)); // NOI18N
        etiketa_precio_nuevo.setForeground(new java.awt.Color(255, 255, 255));
        etiketa_precio_nuevo.setText("...");
        getContentPane().add(etiketa_precio_nuevo, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, 470, 40));
        getContentPane().add(etiketa_Like, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 60, 130, 120));

        txtP_Instrucciones.setColumns(20);
        txtP_Instrucciones.setFont(new java.awt.Font("Elephant", 0, 18)); // NOI18N
        txtP_Instrucciones.setRows(5);
        txtP_Instrucciones.setText("A qui se escrviran las instrucciones que mandes al prohrama");
        jScrollPane1.setViewportView(txtP_Instrucciones);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 210, 420, 120));

        etiketa_Fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/fondi_I.png"))); // NOI18N
        getContentPane().add(etiketa_Fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 849, 550));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Boton_AzucarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Boton_AzucarActionPerformed
        bandera = 1;

        txt_nuevo_Precio.setVisible(true);
        txt_precio_antiguo.setVisible(true);
        etiketa_Like.setVisible(true);
        etiketa_precio_nuevo.setVisible(true);
        etiketa_precio_pasado1.setVisible(true);
        boton_Actualizar.setVisible(true);

        ImageIcon verde = new ImageIcon("src/imagenes/Azucar Verde.png");
        Boton_Azucar.setIcon(verde);

        etiketa_precio_pasado1.setText("este es el precio bigente");
        etiketa_precio_nuevo.setText("Nuevo precio");

        txtP_Instrucciones.setText("has seleccionado \n"
                + "el boton azucar");

        try {
            Connection cn = Conexion.conectar();
            PreparedStatement pst = cn.prepareStatement(
                    "select azucar from precios");
            ResultSet rs = pst.executeQuery();
            if (rs.next()) {

                txt_precio_antiguo.setText(rs.getString("azucar"));

            }
            cn.close();

        } catch (SQLException e) {
            System.err.print("error al buscar el valor del Azucar");
        }

        boton_Agua.setVisible(false);
        boton_Capuchino.setVisible(false);
        boton_Crema.setVisible(false);
        boton_Paletinas.setVisible(false);
        boton_Vasos1.setVisible(false);
        boton_cafe.setVisible(false);
        boton_chocolate.setVisible(false);
        boton_servicio.setVisible(false);

        System.out.println(bandera);

    }//GEN-LAST:event_Boton_AzucarActionPerformed

    private void boton_CremaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_CremaActionPerformed
        bandera = 2;

        txt_nuevo_Precio.setVisible(true);
        txt_precio_antiguo.setVisible(true);
        etiketa_Like.setVisible(true);
        etiketa_precio_nuevo.setVisible(true);
        etiketa_precio_pasado1.setVisible(true);
        boton_Actualizar.setVisible(true);

        ImageIcon verde = new ImageIcon("src/imagenes/crema_verde.png");
        boton_Crema.setIcon(verde);

        etiketa_precio_pasado1.setText("este es el precio bigente");
        etiketa_precio_nuevo.setText("Nuevo precio");

        txtP_Instrucciones.setText("has seleccionado \n"
                + "el boton Crema");

        try {
            Connection cn = Conexion.conectar();
            PreparedStatement pst = cn.prepareStatement(
                    "select crema from precios");
            ResultSet rs = pst.executeQuery();
            if (rs.next()) {

                txt_precio_antiguo.setText(rs.getString("crema"));

            }
            cn.close();

        } catch (SQLException e) {
            System.err.print("error al buscar el valor del crema");
        }

        boton_Agua.setVisible(false);
        boton_Capuchino.setVisible(false);

        boton_Paletinas.setVisible(false);
        boton_Vasos1.setVisible(false);
        boton_cafe.setVisible(false);
        boton_chocolate.setVisible(false);
        boton_servicio.setVisible(false);
        Boton_Azucar.setVisible(false);

        System.out.println(bandera);

    }//GEN-LAST:event_boton_CremaActionPerformed

    private void boton_cafeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_cafeActionPerformed
        bandera = 4;

        txt_nuevo_Precio.setVisible(true);
        txt_precio_antiguo.setVisible(true);
        etiketa_Like.setVisible(true);
        etiketa_precio_nuevo.setVisible(true);
        etiketa_precio_pasado1.setVisible(true);
        boton_Actualizar.setVisible(true);

        ImageIcon verde = new ImageIcon("src/imagenes/cafeVerde.png");
        boton_cafe.setIcon(verde);

        etiketa_precio_pasado1.setText("este es el precio bigente");
        etiketa_precio_nuevo.setText("Nuevo precio");

        txtP_Instrucciones.setText("has seleccionado \n"
                + "el boton Cafe");

        try {
            Connection cn = Conexion.conectar();
            PreparedStatement pst = cn.prepareStatement(
                    "select cafe from precios");
            ResultSet rs = pst.executeQuery();
            if (rs.next()) {

                txt_precio_antiguo.setText(rs.getString("cafe"));

            }
            cn.close();

        } catch (SQLException e) {
            System.err.print("error al buscar el valor del cafe");
        }

        boton_Agua.setVisible(false);
        boton_Capuchino.setVisible(false);
        boton_Crema.setVisible(false);
        boton_Paletinas.setVisible(false);
        boton_Vasos1.setVisible(false);

        boton_chocolate.setVisible(false);
        boton_servicio.setVisible(false);
        Boton_Azucar.setVisible(false);

        System.out.println(bandera);

    }//GEN-LAST:event_boton_cafeActionPerformed

    private void boton_chocolateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_chocolateActionPerformed

        bandera = 3;

        txt_nuevo_Precio.setVisible(true);
        txt_precio_antiguo.setVisible(true);
        etiketa_Like.setVisible(true);
        etiketa_precio_nuevo.setVisible(true);
        etiketa_precio_pasado1.setVisible(true);
        boton_Actualizar.setVisible(true);

        ImageIcon verde = new ImageIcon("src/imagenes/chocolateVerde.png");
        boton_chocolate.setIcon(verde);

        etiketa_precio_pasado1.setText("este es el precio bigente");
        etiketa_precio_nuevo.setText("Nuevo precio");

        txtP_Instrucciones.setText("has seleccionado \n"
                + "el boton Chocolate");

        try {
            Connection cn = Conexion.conectar();
            PreparedStatement pst = cn.prepareStatement(
                    "select chocolate from precios");
            ResultSet rs = pst.executeQuery();
            if (rs.next()) {

                txt_precio_antiguo.setText(rs.getString("chocolate"));

            }
            cn.close();

        } catch (SQLException e) {
            System.err.print("error al buscar el valor del Cocolate");
        }

        boton_Agua.setVisible(false);
        boton_Capuchino.setVisible(false);
        boton_Crema.setVisible(false);
        boton_Paletinas.setVisible(false);
        boton_Vasos1.setVisible(false);
        boton_cafe.setVisible(false);

        boton_servicio.setVisible(false);
        Boton_Azucar.setVisible(false);

        System.out.println(bandera);

    }//GEN-LAST:event_boton_chocolateActionPerformed

    private void boton_servicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_servicioActionPerformed
        bandera = 9;

        txt_nuevo_Precio.setVisible(true);
        txt_precio_antiguo.setVisible(true);
        etiketa_Like.setVisible(true);
        etiketa_precio_nuevo.setVisible(true);
        etiketa_precio_pasado1.setVisible(true);
        boton_Actualizar.setVisible(true);

        ImageIcon verde = new ImageIcon("src/imagenes/servicioVerde.png");
        boton_servicio.setIcon(verde);

        etiketa_precio_pasado1.setText("este es el precio bigente");
        etiketa_precio_nuevo.setText("Nuevo precio");

        txtP_Instrucciones.setText("has seleccionado \n"
                + "el boton servicio");

        try {
            Connection cn = Conexion.conectar();
            PreparedStatement pst = cn.prepareStatement(
                    "select servicio from precios");
            ResultSet rs = pst.executeQuery();
            if (rs.next()) {

                txt_precio_antiguo.setText(rs.getString("servicio"));

            }
            cn.close();

        } catch (SQLException e) {
            System.err.print("error al buscar el valor del servicio");
        }

        boton_Agua.setVisible(false);
        boton_Capuchino.setVisible(false);
        boton_Crema.setVisible(false);
        boton_Paletinas.setVisible(false);
        boton_Vasos1.setVisible(false);
        boton_cafe.setVisible(false);
        boton_chocolate.setVisible(false);

        Boton_Azucar.setVisible(false);

        System.out.println(bandera);

    }//GEN-LAST:event_boton_servicioActionPerformed

    private void boton_CapuchinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_CapuchinoActionPerformed

        bandera = 5;

        txt_nuevo_Precio.setVisible(true);
        txt_precio_antiguo.setVisible(true);
        etiketa_Like.setVisible(true);
        etiketa_precio_nuevo.setVisible(true);
        etiketa_precio_pasado1.setVisible(true);
        boton_Actualizar.setVisible(true);

        ImageIcon verde = new ImageIcon("src/imagenes/capuchinoVerde.png");
        boton_Capuchino.setIcon(verde);

        etiketa_precio_pasado1.setText("este es el precio bigente");
        etiketa_precio_nuevo.setText("Nuevo precio");

        txtP_Instrucciones.setText("has seleccionado \n"
                + "el boton Capuchino");

        try {
            Connection cn = Conexion.conectar();
            PreparedStatement pst = cn.prepareStatement(
                    "select capuchino from precios");
            ResultSet rs = pst.executeQuery();
            if (rs.next()) {

                txt_precio_antiguo.setText(rs.getString("capuchino"));

            }
            cn.close();

        } catch (SQLException e) {
            System.err.print("error al buscar el valor del capuchino");
        }

        boton_Agua.setVisible(false);

        boton_Crema.setVisible(false);
        boton_Paletinas.setVisible(false);
        boton_Vasos1.setVisible(false);
        boton_cafe.setVisible(false);
        boton_chocolate.setVisible(false);
        boton_servicio.setVisible(false);
        Boton_Azucar.setVisible(false);

        System.out.println(bandera);

    }//GEN-LAST:event_boton_CapuchinoActionPerformed

    private void boton_AguaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_AguaActionPerformed

        bandera = 7;

        txt_nuevo_Precio.setVisible(true);
        txt_precio_antiguo.setVisible(true);
        etiketa_Like.setVisible(true);
        etiketa_precio_nuevo.setVisible(true);
        etiketa_precio_pasado1.setVisible(true);
        boton_Actualizar.setVisible(true);

        ImageIcon verde = new ImageIcon("src/imagenes/agua verde.png");
        boton_Agua.setIcon(verde);

        etiketa_precio_pasado1.setText("este es el precio bigente");
        etiketa_precio_nuevo.setText("Nuevo precio");

        txtP_Instrucciones.setText("has seleccionado \n"
                + "el boton agua");

        try {
            Connection cn = Conexion.conectar();
            PreparedStatement pst = cn.prepareStatement(
                    "select agua from precios");
            ResultSet rs = pst.executeQuery();
            if (rs.next()) {

                txt_precio_antiguo.setText(rs.getString("agua"));

            }
            cn.close();

        } catch (SQLException e) {
            System.err.print("error al buscar el valor del agua");
        }

        boton_Capuchino.setVisible(false);
        boton_Crema.setVisible(false);
        boton_Paletinas.setVisible(false);
        boton_Vasos1.setVisible(false);
        boton_cafe.setVisible(false);
        boton_chocolate.setVisible(false);
        boton_servicio.setVisible(false);
        Boton_Azucar.setVisible(false);
        System.out.println(bandera);
    }//GEN-LAST:event_boton_AguaActionPerformed

    private void boton_PaletinasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_PaletinasActionPerformed
        bandera = 8;

        txt_nuevo_Precio.setVisible(true);
        txt_precio_antiguo.setVisible(true);
        etiketa_Like.setVisible(true);
        etiketa_precio_nuevo.setVisible(true);
        etiketa_precio_pasado1.setVisible(true);
        boton_Actualizar.setVisible(true);

        ImageIcon verde = new ImageIcon("src/imagenes/palerinas Verdes.png");
        boton_Paletinas.setIcon(verde);

        etiketa_precio_pasado1.setText("este es el precio bigente");
        etiketa_precio_nuevo.setText("Nuevo precio");

        txtP_Instrucciones.setText("has seleccionado \n"
                + "el boton paletinas");

        try {
            Connection cn = Conexion.conectar();
            PreparedStatement pst = cn.prepareStatement(
                    "select paletinas from precios");
            ResultSet rs = pst.executeQuery();
            if (rs.next()) {

                txt_precio_antiguo.setText(rs.getString("paletinas"));

            }
            cn.close();

        } catch (SQLException e) {
            System.err.print("error al buscar el valor del paletinas");
        }

        boton_Agua.setVisible(false);
        boton_Capuchino.setVisible(false);
        boton_Crema.setVisible(false);

        boton_Vasos1.setVisible(false);
        boton_cafe.setVisible(false);
        boton_chocolate.setVisible(false);
        boton_servicio.setVisible(false);
        Boton_Azucar.setVisible(false);
        System.out.println(bandera);
    }//GEN-LAST:event_boton_PaletinasActionPerformed

    private void boton_Vasos1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_Vasos1ActionPerformed
        bandera = 6;

        txt_nuevo_Precio.setVisible(true);
        txt_precio_antiguo.setVisible(true);
        etiketa_Like.setVisible(true);
        etiketa_precio_nuevo.setVisible(true);
        etiketa_precio_pasado1.setVisible(true);
        boton_Actualizar.setVisible(true);

        ImageIcon verde = new ImageIcon("src/imagenes/vaso verde.png");
        boton_Vasos1.setIcon(verde);

        etiketa_precio_pasado1.setText("este es el precio bigente");
        etiketa_precio_nuevo.setText("Nuevo precio");

        txtP_Instrucciones.setText("has seleccionado \n"
                + "el boton Vasos");

        try {
            Connection cn = Conexion.conectar();
            PreparedStatement pst = cn.prepareStatement(
                    "select tira_de_vasos from precios");
            ResultSet rs = pst.executeQuery();
            if (rs.next()) {

                txt_precio_antiguo.setText(rs.getString("tira_de_vasos"));

            }
            cn.close();

        } catch (SQLException e) {
            System.err.print("error al buscar el valor del tira_de_vasos");
        }

        boton_Agua.setVisible(false);
        boton_Capuchino.setVisible(false);
        boton_Crema.setVisible(false);
        boton_Paletinas.setVisible(false);

        boton_cafe.setVisible(false);
        boton_chocolate.setVisible(false);
        boton_servicio.setVisible(false);
        Boton_Azucar.setVisible(false);
        System.out.println(bandera);
    }//GEN-LAST:event_boton_Vasos1ActionPerformed

    private void boton_ActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_ActualizarActionPerformed
        String anterior_precio = "";
        precioo = txt_nuevo_Precio.getText().trim();
        anterior_precio = txt_precio_antiguo.getText().trim();
        precio = Integer.parseInt(precioo);
        if (!precioo.equals("")) {
            if (!precioo.equals(anterior_precio)) {

                if (bandera == 1) {
                    try {

                        Connection cn3 = Conexion.conectar();
                        PreparedStatement pst3 = cn3.prepareStatement(
                                "UPDATE precios SET azucar = ? ");

                        pst3.setInt(1, precio);

                        pst3.executeUpdate();
                        cn3.close();

                        cantidad = 1000;
                        float insumo = (precio / cantidad)*10;

                        guardoI = Float.toString(insumo);

                        Connection cn2 = Conexion.conectar();
                        PreparedStatement pst2 = cn2.prepareStatement("UPDATE unitario SET azucar = ?");
                        pst2.setString(1, guardoI);
                        pst2.executeUpdate();

                    } catch (SQLException e) {
                        System.err.print("error al actualizar el precio del azucar");
                    }

                    txtP_Instrucciones.setText("has camboado el precio de \n"
                            + "la Azucar el precio valido \n"
                            + "es: " + precioo);
                    ImageIcon like = new ImageIcon("src/imagenes/like.png");
                    etiketa_Like.setIcon(like);
                    JOptionPane.showMessageDialog(null, "La actualisacion se realizo correctamente");

                    this.dispose();

                } else if (bandera == 2) {
                    try {

                        Connection cn3 = Conexion.conectar();
                        PreparedStatement pst3 = cn3.prepareStatement(
                                "UPDATE precios SET crema = ?");

                        pst3.setInt(1, precio);

                        pst3.executeUpdate();
                        cn3.close();

                        cantidad = 10000;
                        float insumo = (precio / cantidad)*10;

                        guardoI = Float.toString(insumo);

                        Connection cn2 = Conexion.conectar();
                        PreparedStatement pst2 = cn2.prepareStatement("UPDATE unitario SET crema = ?");
                        pst2.setString(1, guardoI);
                        pst2.executeUpdate();

                    } catch (SQLException e) {
                        System.err.print("error al actualizar el precio de la crema");
                    }

                    txtP_Instrucciones.setText("has camboado el precio de \n"
                            + "la crema el precio valido \n"
                            + "es: " + precioo);
                    ImageIcon like = new ImageIcon("src/imagenes/like.png");
                    etiketa_Like.setIcon(like);
                    JOptionPane.showMessageDialog(null, "La actualisacion se realizo correctamente");
                    this.dispose();

                } else if (bandera == 3) {
                    try {

                        Connection cn3 = Conexion.conectar();
                        PreparedStatement pst3 = cn3.prepareStatement(
                                "UPDATE precios SET chocolate = ?");

                        pst3.setInt(1, precio);

                        pst3.executeUpdate();
                        cn3.close();

                        cantidad = 357;
                        float insumo = (precio / cantidad)*10;

                        guardoI = Float.toString(insumo);
                        
                        Connection cn2 = Conexion.conectar();
                        PreparedStatement pst2 = cn2.prepareStatement("UPDATE unitario SET chocolate = ?");
                        pst2.setString(1, guardoI);
                        pst2.executeUpdate();

                    } catch (SQLException e) {
                        System.err.print("error al actualizar el precio del chocolate");
                    }

                    txtP_Instrucciones.setText("has camboado el precio del \n"
                            + " chocolate el precio valido \n"
                            + "es: " + precioo);
                    ImageIcon like = new ImageIcon("src/imagenes/like.png");
                    etiketa_Like.setIcon(like);
                    JOptionPane.showMessageDialog(null, "La actualisacion se realizo correctamente");
                    this.dispose();

                } else if (bandera == 4) {

                    try {

                        Connection cn3 = Conexion.conectar();
                        PreparedStatement pst3 = cn3.prepareStatement(
                                "UPDATE precios SET cafe = ?");

                        pst3.setInt(1, precio);

                        pst3.executeUpdate();
                        cn3.close();

                        cantidad = 1000;
                        float insumo = (precio / cantidad)*10;

                        guardoI = Float.toString(insumo);

                        Connection cn2 = Conexion.conectar();
                        PreparedStatement pst2 = cn2.prepareStatement("UPDATE unitario SET cafe = ?");
                        pst2.setString(1, guardoI);
                        pst2.executeUpdate();

                    } catch (SQLException e) {
                        System.err.print("error al actualizar el precio del cafe");
                    }

                    txtP_Instrucciones.setText("has camboado el precio del \n"
                            + " cafe el precio valido \n"
                            + "es: " + precioo);
                    ImageIcon like = new ImageIcon("src/imagenes/like.png");
                    etiketa_Like.setIcon(like);
                    JOptionPane.showMessageDialog(null, "La actualisacion se realizo correctamente");
                    this.dispose();

                } else if (bandera == 5) {

                    try {

                        Connection cn3 = Conexion.conectar();
                        PreparedStatement pst3 = cn3.prepareStatement(
                                "UPDATE precios SET capuchino = ?");

                        pst3.setInt(1, precio);

                        pst3.executeUpdate();
                        cn3.close();

                        cantidad = 907;
                        float insumo = (precio / cantidad)*20;

                        guardoI = Float.toString(insumo);

                        Connection cn2 = Conexion.conectar();
                        PreparedStatement pst2 = cn2.prepareStatement("UPDATE unitario SET capuchino = ?");
                        pst2.setString(1, guardoI);
                        pst2.executeUpdate();

                    } catch (SQLException e) {
                        System.err.print("error al actualizar el precio del capuchino");
                    }

                    txtP_Instrucciones.setText("has camboado el precio del \n"
                            + " capuchino el precio valido \n"
                            + "es: " + precioo);
                    ImageIcon like = new ImageIcon("src/imagenes/like.png");
                    etiketa_Like.setIcon(like);
                    JOptionPane.showMessageDialog(null, "La actualisacion se realizo correctamente");
                    this.dispose();

                } else if (bandera == 6) {

                    try {

                        Connection cn3 = Conexion.conectar();
                        PreparedStatement pst3 = cn3.prepareStatement(
                                "UPDATE precios SET tira_de_vasos = ?");

                        pst3.setInt(1, precio);

                        pst3.executeUpdate();
                        cn3.close();

                        cantidad = 50;
                        float insumo = precio / cantidad;

                        guardoI = Float.toString(insumo);

                        Connection cn2 = Conexion.conectar();
                        PreparedStatement pst2 = cn2.prepareStatement("UPDATE unitario SET vaso = ?");
                        pst2.setString(1, guardoI);
                        pst2.executeUpdate();

                    } catch (SQLException e) {
                        System.err.print("error al actualizar el precio del tira_de_vasos");
                    }

                    txtP_Instrucciones.setText("has camboado el precio de \n"
                            + "la tira_de_vasos el precio valido \n"
                            + "es: " + precioo);
                    ImageIcon like = new ImageIcon("src/imagenes/like.png");
                    etiketa_Like.setIcon(like);
                    JOptionPane.showMessageDialog(null, "La actualisacion se realizo correctamente");
                    this.dispose();

                } else if (bandera == 7) {

                    try {

                        Connection cn3 = Conexion.conectar();
                        PreparedStatement pst3 = cn3.prepareStatement(
                                "UPDATE precios SET agua = ?");

                        pst3.setInt(1, precio);

                        pst3.executeUpdate();
                        cn3.close();

                        cantidad = 20000;
                        float insumo = precio / cantidad;

                        ag = insumo * 220;
                        guardoI = Float.toString(ag);

                        Connection cn2 = Conexion.conectar();
                        PreparedStatement pst2 = cn2.prepareStatement("UPDATE unitario SET agua = ?");
                        pst2.setString(1, guardoI);
                        pst2.executeUpdate();

                    } catch (SQLException e) {
                        System.err.print("error al actualizar el precio del agua");
                    }

                    txtP_Instrucciones.setText("has camboado el precio del \n"
                            + " agua el precio valido \n"
                            + "es: " + precioo);
                    ImageIcon like = new ImageIcon("src/imagenes/like.png");
                    etiketa_Like.setIcon(like);
                    JOptionPane.showMessageDialog(null, "La actualisacion se realizo correctamente");
                    this.dispose();

                } else if (bandera == 8) {

                    try {

                        Connection cn3 = Conexion.conectar();
                        PreparedStatement pst3 = cn3.prepareStatement(
                                "UPDATE precios SET paletinas = ?");

                        pst3.setInt(1, precio);

                        pst3.executeUpdate();
                        cn3.close();
                        
                        cantidad = 100;
                        float insumo = precio / cantidad;

                        guardoI = Float.toString(insumo);

                        Connection cn2 = Conexion.conectar();
                        PreparedStatement pst2 = cn2.prepareStatement("UPDATE unitario SET paletina = ?");
                        pst2.setString(1, guardoI);
                        pst2.executeUpdate();

                    } catch (SQLException e) {
                        System.err.print("error al actualizar el precio del paletinas");
                    }

                    txtP_Instrucciones.setText("has camboado el precio de \n"
                            + "las paletinas el precio valido \n"
                            + "es: " + precioo);
                    ImageIcon like = new ImageIcon("src/imagenes/like.png");
                    etiketa_Like.setIcon(like);
                    JOptionPane.showMessageDialog(null, "La actualisacion se realizo correctamente");
                    this.dispose();

                } else if (bandera == 9) {

                    try {

                        Connection cn3 = Conexion.conectar();
                        PreparedStatement pst3 = cn3.prepareStatement(
                                "UPDATE precios SET servicio = ?");

                        pst3.setInt(1, precio);

                        pst3.executeUpdate();
                        cn3.close();

                    } catch (SQLException e) {
                        System.err.print("error al actualizar el precio del servicio");
                    }

                    txtP_Instrucciones.setText("has camboado el precio del \n"
                            + "servicio el precio valido \n"
                            + "es: " + precioo);
                    ImageIcon like = new ImageIcon("src/imagenes/like.png");
                    etiketa_Like.setIcon(like);
                    JOptionPane.showMessageDialog(null, "La actualisacion se realizo correctamente");
                    this.dispose();
                }
            } else {
                JOptionPane.showMessageDialog(null, "Ese precio ya existe");
                this.dispose();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Deves llenar todos los campos");
        }
    }//GEN-LAST:event_boton_ActualizarActionPerformed

    private void boton_CerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_CerrarActionPerformed
        this.dispose();
    }//GEN-LAST:event_boton_CerrarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cambiar_precio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cambiar_precio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cambiar_precio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cambiar_precio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cambiar_precio().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Boton_Azucar;
    private javax.swing.JButton boton_Actualizar;
    private javax.swing.JButton boton_Agua;
    private javax.swing.JButton boton_Capuchino;
    private javax.swing.JButton boton_Cerrar;
    private javax.swing.JButton boton_Crema;
    private javax.swing.JButton boton_Paletinas;
    private javax.swing.JButton boton_Vasos1;
    private javax.swing.JButton boton_cafe;
    private javax.swing.JButton boton_chocolate;
    private javax.swing.JButton boton_servicio;
    private javax.swing.JLabel etiketa_Fondo;
    private javax.swing.JLabel etiketa_Like;
    private javax.swing.JLabel etiketa_precio_nuevo;
    private javax.swing.JLabel etiketa_precio_pasado1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txtP_Instrucciones;
    private javax.swing.JTextField txt_nuevo_Precio;
    private javax.swing.JTextField txt_precio_antiguo;
    // End of variables declaration//GEN-END:variables

    private String toString(float insumo) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

}
